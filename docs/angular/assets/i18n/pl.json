{
    "page": {
        "home": {
            "title": "Angular w kilku słowach",
            "p1": "Angular jest schematem (ang. Framework)  tworzenia kodu w TypeScript opracowanym przez Google przeznaczonym do tworzenia aplikacji internetowych uruchamianych po stronie klienta w przeglądarce. Został opublikowany w 2010 roku przez co jest najstarszym schematem spośród opracowywanych na rzecz tego projektu [React, Vue]. W maju 2016 roku została opublikowana nowa wersja Angulara oznaczona wersją 2. Była to bardzo duża zmiana, która zastąpiła pierwszą wersję tego schamatu nazywaną powszechnie jako AngularJS. Projekt został napisany na nowo całkowicie zmieniając podejście do tworzenia kodu aplikacji, która była niezależną aplikacją, a nie wtyczką do istniejącej strony. Od tego czasu główne założenia się nie zmieniły, ale co roku publikowane są nowe wersje wprowadzające pewne rozwiązania znane z innych współczesnych systemów. Obecnie dostępna jest wersja oznaczona numerem 16, która zmienia podejście do aktualizacji struktury DOM wprowadzając technologię Sygnałów.",
            "p2": "Aplikacje internetowe mogą być tworzone poprzez łatwe w komponowaniu, proste w enkapsulacji i z możliwością wielokrotnego użytku komponenty Angularowe. Z założenia komponenty przyjmują pewne dane wejściowe, wykonują określone operacje na nich w oparciu o zdefiniowaną logikę. Wewnętrzne metody, można wykorzystać, aby zmieniać stan, albo zachowanie komponentu co może się objawiać zmianami w strukturze drzewa DOM. Złożona składania oraz wymuszane korzystanie ze wzorców projektowych sprawia, że próg wejścia do tworzenia aplikacji w Angularze może odrzucać początkujących programistów. Natomiast zgłębienie pewnych zasad pozwoli lepiej opanować pewne aspekty z inżynierii oprogramowania, dlatego dla ludzi który pracują z językami mocno typowanymi z mocną znajomością pewnych wzorców łatwiej odnajtują się w tym schemacie. Angular opiera się na wzorcu MVC (Model - Widok - Kontroler), w którym to każdy komponent ma oddzieloną część odpowiedzalną za prezentację danych i warstwę odpowiedzalną za logikę komponentu. Oprócz tego w Angularze można się spotkać ze wzorcem 'serwisów', czy innych rozwiązań znanych z programowania obiektowego (OOP) takich jak dziedziczenie, enkapsulacja czy tworzenie interfejsów. Te określone zasady pozwalają utrzymywać strukturę kodu w porządku, przez co łatwiej zarządzać dużymi projekatmi w którym to wielu deweloperów musi współpracować przy towrzeniu wysoce interaktywnej aplikacji internetowej.",
            "p3": "Angular itself contain every basic functionality that is needed to build a web application like: CLI, routing, HTTP requests and even E2E testing suite. You do not have to install anything, just initialize the Angular project and start coding. Using integrated Command Line Interface (Angular CLI) creation of components is a piece of cake. Just run the command `<code>ng generate component component-name</code>` and you are done. Everything is well documented and you can find more information on the official website.",
            "p4": "Angular has related UI Library called 'Angular Material' that can be used to build a better looking and more interactive web application using prepared components. Becouse that library is developed by Google it's up-to-date with latest versions of Angular."
        }
    }
}